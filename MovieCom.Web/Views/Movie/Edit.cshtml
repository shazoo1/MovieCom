@model MovieCom.Web.Models.Movie.AddMovieViewModel
@{
    ViewBag.Title = "Edit";
}
@if (Model.Movie != null)
{
    <h2>Редактировать фильм</h2>
    <a href="@Url.Action("Delete", "Movie", new { id = Model.Movie.Id })">Удалить</a>
}
else
{
    <h2>Добавить фильм</h2>
}
@Styles.Render("~/Content/dropzone")
<div>
        <div class="col-md-6 col-lg-6 col-sm-6">
    @using (Html.BeginForm("Edit", "Movie", FormMethod.Post, new { @class = "form-group" }))
    {
            @Html.HiddenFor(m => m.Movie.Id)

            @Html.LabelFor(m => m.Movie.Title)
            @Html.TextBoxFor(m => m.Movie.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.Title)

            @Html.LabelFor(m => m.Movie.Slogan)
            @Html.TextBoxFor(m => m.Movie.Slogan, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.Slogan)

            @Html.LabelFor(m => m.Movie.Description)
            @Html.TextAreaFor(m => m.Movie.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.Description)

            @Html.LabelFor(m => m.Movie.Imdb)
            @Html.TextBoxFor(m => m.Movie.Imdb, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.Imdb)

            @Html.LabelFor(m => m.Movie.Year)
            @Html.TextBoxFor(m => m.Movie.Year, new { @class = "form-control", @type = "number" })
            @Html.ValidationMessageFor(m => m.Movie.Year)

            @Html.LabelFor(m => m.AllGenres)<br />
            @Html.ListBoxFor(m => m.Movie.Genres, new MultiSelectList(Model.AllGenres, "Id", "Name", Model.Movie.Genres),
                new { @class= "chzn-select form-control", data_placeholder="Жанр"})<br />
            @Html.ValidationMessageFor(m => m.AllGenres)

            @Html.LabelFor(m => m.AllActors)<br />
            @Html.ListBoxFor(m => m.Movie.Actors, new MultiSelectList(Model.AllActors, "Id", "DisplayName", Model.Movie.Actors),
                new { @class= "chzn-select form-control", data_placeholder="Актёры"})<br />
            <br />
            @Html.HiddenFor(m => m.Movie.PosterLink, new { @id = "posterLink" })
            <input type="submit" value="Добавить" />
    }
        </div>
        <div class="col-md-6 col-lg-6 col-sm-6">
            @Html.LabelFor(m => m.Movie.PosterLink)
            <form action="/Movie/UploadPoster"
                  method="post"
                  class="dropzone"
                  id="dropzone">
            </form>
        </div>
</div>
@Scripts.Render("~/bundles/knockout")
@Scripts.Render("~/bundles/addMovie")
@Scripts.Render("~/bundles/filedrop")
<script src="@Url.Content("~/Content/chosen/chosen.jquery.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/chosen/chosen.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    jQuery(document).ready(function ($) {
        $('#imgLink').bind('input', function () {
            $('#posterPreview').attr('src', $(this).val());
        });
    });
    Dropzone.autoDiscover = false;
    var dzone = new Dropzone(document.getElementById('dropzone'), {
        paramName: "file", // The name that will be used to transfer the file
        maxFilesize: 2, // MB
        accept: function (file, done) {
            if (file.name == "justinbieber.jpg") {
                done("Naha, you don't.");
            }
            else { done(); }
        },
        acceptedFiles: 'image/*',
        init: function () {
            this.on("complete", function (data) {
                //var res = eval('(' + data.xhr.responseText + ')');
                var res = JSON.parse(data.xhr.responseText);
                console.log(res.Message);
                $('#posterLink').val(res.Message);
            });
        },
        maxFiles: 1
    });
</script>
<script>$(".chzn-select").chosen();</script>